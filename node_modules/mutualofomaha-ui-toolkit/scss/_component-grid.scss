
// Converted Variables

$Grid-font-size: 1.6rem !default;
$Grid-gutter-size: 1.6rem !default;

// Custom Media Query Variables


/** @define Grid; use strict */

/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

.Grid {
  display: block;
  margin: 0 (-1 * $Grid-gutter-size);
  padding: 0;
  text-align: left;
  overflow: hidden;
}

/**
 * Modifier: center align all grid cells
 * Definitely not perfect.
 * Cannot use all 12 columns due to float: none
 * (i.e., not removing inline-block whitespace)
 * Recommend using a nested .Grid-cell--center instead
 */

.Grid--alignCenter {
  text-align: center;
}
.Grid--alignCenter .Grid-cell {
  float: none;
  text-align: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
  text-align: right;
}
.Grid--alignRight .Grid-cell {
  float: right;
  text-align: right;
}

/**
 * Modifier: middle-align grid cells
 * Depricated due to floats
 */

/* .Grid--alignMiddle > .Grid-cell {
  vertical-align: middle;
} */

/**
 * Modifier: bottom-align grid cells
 * Depricated due to floats
 */

/* .Grid--alignBottom > .Grid-cell {
  vertical-align: bottom;
} */

/**
 * Modifier: gutters
 *
 * NOTE: this can trigger a horizontal scrollbar if the component is as wide as
 * the viewport. Use padding on a container, or `overflow-x:hidden` to protect
 * against it.
 */

.Grid--withoutGutter {
  margin: 0;
}

.Grid--withoutGutter > .Grid-cell {
  padding: 0;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'grid'.
 */

.Grid-cell {
  position: relative; /* Required for [Ordering](https://github.com/mutualofomaha/utility-order) */
  display: inline-block;
  padding: 0 $Grid-gutter-size;
  margin: 0;
  text-align: left;
  vertical-align: top;
  width: 100%;
  float: left;
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
  display: block;
  margin: 0 auto;
  float:none;
}