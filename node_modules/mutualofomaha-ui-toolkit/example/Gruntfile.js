var webpack = require('webpack');

module.exports = function(grunt) {

  require('load-grunt-tasks')(grunt);

  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    watch: {
      css: {
        files: ['src/**/*.css'],
        tasks: ['css']
      },
      scss: {
        files: ['src/**/*.scss'],
        tasks: ['scss']
      },
      js: {
        files: ['src/**/*.js'],
        tasks: ['js']
      }
    },
    sass: { // Run via `grunt scss` NOT `grunt sass`; Gets you autoprefixer, etc.
      compile: {
        options: {
          includePaths: ['./node_modules/pink-swan/scss']
        },
        files: {
          'dist/assets/css/style.css': './src/index.scss'
        }
      }
    },
    postcss: {
      options: {
        bemLinter: true,
        browsers: [
          'Last 2 versions',
          'IE >= 9'
        ],
        /* If you want to include only specific components (instead of a full opt-in) */
        // import: { path: './node_modules/pink-swan/node_modules' }

        /* If you need to add a namespace (see options at https://github.com/thompsongl/postcss-class-prefix) */
        // namespace: {
        //   prefix: 'core-',
        //   options: {
        //     ignore: /^is\-/
        //   }
        // }
      },
      compile: {
        files: {
          'dist/assets/css/style.css': ['./src/index.css']
        }
      },
      scss: {
        files: {
          'dist/assets/css/style.css': ['dist/assets/css/style.css']
        }
      },
      dist: {
        options: {
          compress: true
        },
        files: {
          'dist/assets/css/style.css': ['./src/index.css']
        }
      }
    },
    webpack: {
      compile: {
        entry: [
          'expose?jQuery!jquery',
          'expose?$!jquery',
          "./src/index.js"
        ],
        output: {
          path: "dist/assets/javascripts",
          filename: "scripts.js",
        },
        plugins: [
          new webpack.ProvidePlugin({
            $: 'jquery',
            jQuery: 'jquery',
            'window.jQuery': 'jquery'
          }),
          new webpack.optimize.DedupePlugin()
        ]
      },
      dist: {
        entry: [
          'expose?jQuery!jquery',
          'expose?$!jquery',
          "./src/index.js"
        ],
        output: {
          path: "dist/assets/javascripts",
          filename: "scripts.min.js",
        },
        plugins: [
          new webpack.ProvidePlugin({
            $: 'jquery',
            jQuery: 'jquery',
            'window.jQuery': 'jquery'
          }),
          new webpack.optimize.DedupePlugin(),
          new webpack.optimize.UglifyJsPlugin()
        ]
      }
    }
  });

  grunt.registerTask('css', ['postcss:compile']);
  grunt.registerTask('scss', ['sass:compile', 'postcss:scss']);
  grunt.registerTask('js', ['webpack:compile']);
  grunt.registerTask('dist', ['postcss:dist', 'webpack:dist']);
};
