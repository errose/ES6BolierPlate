var Spinner = require('spin.js');

var Loader = (function(){

  var loader = {};

  loader.init = function(){
    var targetsSmall = document.querySelectorAll('[class*=Loader--sm]');
    var loadersSmall = [];
    var optsSmall  =  {
      lines: 10, // The number of lines to draw
      length: 4, // The length of each line
      width: 2, // The line thickness
      radius: 4, // The radius of the inner circle
      rotate: 0, // The rotation offset
      color: '#FFF', // #rgb or #rrggbb
      speed: 1, // Rounds per second
      trail: 60, // Afterglow percentage
      shadow: false, // Whether to render a shadow
      hwaccel: false, // Whether to use hardware acceleration
      className: 'Loader-spinner', // The CSS class to assign to the spinner
      zIndex: 2e9, // The z-index (defaults to 2000000000)
      top: '50%', // Top position relative to parent in px
      left: '50%' // Left position relative to parent in px
    };

    var targetsLarge = document.querySelectorAll('[class*=Loader--lg]');
    var loadersLarge = [];
    var optsLarge  =  {
      lines: 9, // The number of lines to draw
      length: 39, // The length of each line
      width: 7, // The line thickness
      radius: 74, // The radius of the inner circle
      scale: 0.5,
      rotate: 0, // The rotation offset
      color: '#FFF', // #rgb or #rrggbb
      speed: 1, // Rounds per second
      trail: 60, // Afterglow percentage
      shadow: false, // Whether to render a shadow
      hwaccel: false, // Whether to use hardware acceleration
      className: 'Loader-spinner', // The CSS class to assign to the spinner
      zIndex: 2e9, // The z-index (defaults to 2000000000)
      top: '50%', // Top position relative to parent in px
      left: '50%' // Left position relative to parent in px
    };

    for (var i = 0; i < targetsSmall.length; i++) {
      loadersSmall.push = new Spinner(optsSmall).spin(targetsSmall[i]);
    }

    for (var l = 0; l < targetsLarge.length; l++) {
      loadersLarge.push = new Spinner(optsLarge).spin(targetsLarge[l]);
    }
  };

  return loader;

})();

module.exports = Loader;
