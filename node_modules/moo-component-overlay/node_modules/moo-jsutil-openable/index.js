/**
 * Openable.js
 *
 * Use with data attributes:
 * <a href="#target" data-openable></a>
 * <div id="target"></div>
 *
 * Programmatic:
 * Openable.toggle($target);  // Toggle (Checks for `.is-open`)
 * Openable.toggle($target, true, [$trigger|false]);  // Open
 * Openable.toggle($target, false, [$trigger|false]); // Close
 */

var $ = require('jquery');

var Openable = (function () {

  var openable = {};

  openable.init = function () {
    var self = this;
    $(document).on('click', '[data-openable]', function(e){
      e.preventDefault();
      var target = $(this).attr('href');
      self.toggle(target);
    });
  };
  openable.toggle = function (target, open, trigger) {
    open = (typeof open === 'undefined') ? !$(target).is('.is-open') : open;
    trigger = (typeof trigger === 'undefined') ? '[data-openable][href='+target+']' : trigger;
    $(target).add(trigger).toggleClass('is-open', open);
  };

  return openable;

})();

module.exports = Openable;
